#!/usr/bin/env ruby

require 'thor'
require 'dlz'

# Main Thor class for `dlz`
class DLZ < Thor
  desc 'init', 'Create new `dlz` configuration skeleton'
  def init
    Config.init
  end

  desc 'config', 'Inspect `dlz` configuration'
  def config
    Config.query
  end

  desc 'whoami', 'Inspect AWS caller identity'
  def whoami
    Config.whoami
  end

  desc 'version', 'Print `dlz` version info'
  def version
    Config.version
  end

  desc 'render', 'Render CloudFormation templates for `dlz` and local resources'
  def render
    Renderer.render_all
  end

  desc 'organization COMMAND', 'Configure organization and organizational units'
  long_desc <<-DESC
    Manage AWS Organization and organizational units.
    Commands:
      - 'deploy':  `dlz` will try to deploy the organization and it's structure as
                   configured in the configuration.
      - 'destroy': `dlz` will attempt to destroy the organization completely.
      - 'query':   `dlz` will query information about the current organization.
      - 'units':   `dlz` will retrieve a complete list of all children under the
                   current org root.
  DESC
  def organization(command)
    return Organization.deploy if command.casecmp('deploy').zero?
    return Organization.destroy if command.casecmp('destroy').zero?
    return Organization.query if command.casecmp('query').zero?
    return Organization.units if command.casecmp('units').zero?

    Interface.error(message: "unable to understand '#{command}'")
  end

  desc 'accounts COMMAND', 'Create accounts and attach to organization'
  long_desc <<-DESC
    Create and configure AWS accounts to the currently configured organization.
    Commands:
      - 'deploy':  `dlz` will attempt to configure all accounts as configured and
                   will try to enroll them into the organization at the specific
                   organizational units.
      - 'destroy': `dlz` will suspend accounts.
  DESC
  def accounts(command)
    return Accounts.deploy if command.casecmp('deploy').zero?
    return Accounts.destroy if command.casecmp('destroy').zero?

    Interface.error(message: "unable to understand '#{command}'")
  end

  desc 'resources COMMAND', 'Deploy resources per account'
  long_desc <<-DESC
    Manage AWS resources according to configuration.
    Commands:
      - 'deploy':  `dlz` will try to deploy all defined stacks and provision
                   resources into AWS accounts.
      - 'destroy': `dlz` will collapse all stacks and destroy all resources.
  DESC
  def resources(command)
    return Resources.deploy if command.casecmp('deploy').zero?
    return Resources.destroy if command.casecmp('destroy').zero?

    Interface.error(message: "unable to understand '#{command}'")
  end
end

DLZ.start(ARGV)
